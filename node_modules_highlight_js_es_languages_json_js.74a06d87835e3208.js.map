{"version":3,"file":"node_modules_highlight_js_es_languages_json_js.74a06d87835e3208.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAIA,CAACC,IAAI,EAAE;EAClB,MAAMC,SAAS,GAAG;IAChBC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,6BAA6B;IACpCC,SAAS,EAAE;EACb,CAAC;EACD,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAE,WAAW;IAClBJ,SAAS,EAAE,aAAa;IACxBE,SAAS,EAAE;EACb,CAAC;EACD,MAAMG,QAAQ,GAAG,CACf,MAAM,EACN,OAAO,EACP,MAAM,CACP;EACD;EACA;EACA;EACA;EACA;EACA,MAAMC,aAAa,GAAG;IACpBC,KAAK,EAAE,SAAS;IAChBC,aAAa,EAAEH,QAAQ,CAACI,IAAI,CAAC,GAAG;EAClC,CAAC;EAED,OAAO;IACLC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,CAAC,OAAO,CAAC;IAClBC,QAAQ,EAAC;MACPC,OAAO,EAAER;IACX,CAAC;IACDS,QAAQ,EAAE,CACRf,SAAS,EACTI,WAAW,EACXL,IAAI,CAACiB,iBAAiB,EACtBT,aAAa,EACbR,IAAI,CAACkB,aAAa,EAClBlB,IAAI,CAACmB,mBAAmB,EACxBnB,IAAI,CAACoB,oBAAoB,CAC1B;IACDC,OAAO,EAAE;EACX,CAAC;AACH","sources":["./node_modules/highlight.js/es/languages/json.js"],"sourcesContent":["/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    aliases: ['jsonc'],\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nexport { json as default };\n"],"names":["json","hljs","ATTRIBUTE","className","begin","relevance","PUNCTUATION","match","LITERALS","LITERALS_MODE","scope","beginKeywords","join","name","aliases","keywords","literal","contains","QUOTE_STRING_MODE","C_NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","illegal","default"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}