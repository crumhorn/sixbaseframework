{"version":3,"file":"src_app_usecases_core_core_module_ts.d9e1ad27060af927.js","mappings":"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","sources":["./src/app/usecases/core/core.module.ts","./src/app/usecases/core/core.routing.ts","./src/app/usecases/core/entities/TestEntity.ts","./src/app/usecases/core/entities/TestEntityCustomAnnotation.ts","./src/app/usecases/core/model/CoreUsecaseModel.ts","./src/app/usecases/core/views/CoreView.ts","./src/app/usecases/core/views/CoreView.html"],"sourcesContent":["import {NgModule} from '@angular/core'\r\nimport {CommonModule} from '@angular/common';\r\nimport {LocalRouting} from \"./core.routing\";\r\nimport {CoreView} from \"./views/CoreView\";\r\nimport {CoreUsecaseModel} from \"./model/CoreUsecaseModel\";\r\nimport {SharedModule} from \"../../app.shared.modules\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LocalRouting,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    // views\r\n    CoreView,\r\n  ],\r\n  providers: [\r\n    CoreUsecaseModel\r\n  ],\r\n  exports: []\r\n})\r\nexport class TestCoreModule {\r\n}\r\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {ModuleWithProviders} from \"@angular/core\";\r\nimport {TestCoreModule} from \"./core.module\";\r\nimport {CoreView} from \"./views/CoreView\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CoreView }\r\n];\r\n\r\nexport const LocalRouting: ModuleWithProviders<TestCoreModule> = RouterModule.forChild(routes);\r\n","import {BaseEntity} from \"@six-group/base-angular-framework/core\";\r\n\r\nexport class TestEntity implements BaseEntity<TestEntity> {\r\n\r\n  getClassName(): string {\r\n    return \"TestEntity\";\r\n  }\r\n\r\n  postProcess(): void {\r\n  }\r\n\r\n}\r\n","import {BaseEntity} from \"@six-group/base-angular-framework/core\";\r\nimport {CustomAnnotation} from \"./CustomAnnotation\";\r\n\r\nexport class TestEntityCustomAnnotation implements BaseEntity<TestEntityCustomAnnotation> {\r\n\r\n  @CustomAnnotation()\r\n  public name: string | null = null;\r\n\r\n  getClassName(): string {\r\n    return \"TestEntityCustomAnnotation\";\r\n  }\r\n\r\n  postProcess(): void {\r\n  }\r\n\r\n}\r\n","import {BaseUsecaseModel} from \"@six-group/base-angular-framework/core\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class CoreUsecaseModel extends BaseUsecaseModel {\r\n\r\n  destroy(): void {\r\n  }\r\n\r\n  handleInitializionError(err: any): void {\r\n    console.error(err);\r\n  }\r\n\r\n  hookObservables(): void {\r\n  }\r\n\r\n\r\n}\r\n","import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from \"@angular/core\";\r\nimport {BaseView, EntityMapper} from \"@six-group/base-angular-framework/core\";\r\nimport {TestEntity} from \"../entities/TestEntity\";\r\nimport {TestEntityCustomAnnotation} from \"../entities/TestEntityCustomAnnotation\";\r\n\r\n@Component({\r\n  selector: 'CoreView',\r\n  templateUrl: './CoreView.html',\r\n  styleUrls: ['./CoreView.scss'],\r\n  providers: [],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CoreView extends BaseView implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  public testEntity: TestEntity | null = null;\r\n  public testEntityWithAnnotation: TestEntityCustomAnnotation | null = null;\r\n\r\n  constructor(private cd: ChangeDetectorRef, private entityMapper: EntityMapper) {\r\n    super();\r\n  }\r\n\r\n  getEventGrid(id: string): any {\r\n  }\r\n\r\n  hookObservables(): void {\r\n\r\n  }\r\n\r\n  override ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.testEntity = new TestEntity();\r\n    this.testEntityWithAnnotation = new TestEntityCustomAnnotation();\r\n    this.entityMapper.mapEntityTreeFrom({}, this.testEntityWithAnnotation, TestEntityCustomAnnotation, true);\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  override ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  override ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h1>Core features - Test.</h1>\r\n\r\n<ul>\r\n  <li>-. If you see this at all, that means the BaseView implementation works (or this page would not load). It also means the BaseUsecaseModel implementation is working.</li>\r\n  <ng-container *ngIf=\"!settingsService\">\r\n    <li>ERROR - SETTING SERVICE Class 'SettingService' was not injected.</li>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"settingsService\">\r\n    <li *ngIf=\"settingsService.frameworkSettings\">- You should see what you have injected with 'forRoot' here for the various settings:\r\n      <pre>{{ settingsService.frameworkSettings | json }}</pre>\r\n    </li>\r\n    <li *ngIf=\"!settingsService.frameworkSettings\">- You <b>injected no</b> properties in forRoot</li>\r\n    <li *ngIf=\"settingsService.classHandler\">-. A Class handler has been also been set.</li>\r\n    <li *ngIf=\"!settingsService.classHandler\">-. A Class handler has <b>not</b> been also been set.</li>\r\n  </ng-container>\r\n  <li *ngIf=\"testEntity\">Test Entity Exists, that means BaseEntity implementation works</li>\r\n  <li *ngIf=\"!testEntity\">Test Entity does NOT Exist! That means BaseEntity implementation does not work</li>\r\n  <li *ngIf=\"testEntityWithAnnotation\">Test Entity With Custom Annotation Exists, that means the annotation framework works. Value of \"name\" is: {{ testEntityWithAnnotation.name }}</li>\r\n  <li *ngIf=\"!testEntity\">Test Entity With Custom Annotation does NOT Exist!</li>\r\n</ul>\r\n"],"names":["CommonModule","LocalRouting","CoreView","CoreUsecaseModel","SharedModule","TestCoreModule","imports","declarations","i1","RouterModule","routes","path","component","forChild","TestEntity","getClassName","postProcess","CustomAnnotation","TestEntityCustomAnnotation","constructor","name","__decorate","BaseUsecaseModel","destroy","handleInitializionError","err","console","error","hookObservables","__ngFactoryType__","factory","ɵfac","BaseView","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r0","settingsService","frameworkSettings","ɵɵtemplate","CoreView_ng_container_6_li_1_Template","CoreView_ng_container_6_li_2_Template","CoreView_ng_container_6_li_3_Template","CoreView_ng_container_6_li_4_Template","ɵɵproperty","classHandler","ɵɵtextInterpolate1","testEntityWithAnnotation","cd","entityMapper","testEntity","getEventGrid","id","ngOnInit","mapEntityTreeFrom","markForCheck","ngAfterViewInit","ngOnDestroy","ɵɵdirectiveInject","ChangeDetectorRef","EntityMapper","selectors","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","CoreView_Template","rf","ctx","CoreView_ng_container_5_Template","CoreView_ng_container_6_Template","CoreView_li_7_Template","CoreView_li_8_Template","CoreView_li_9_Template","CoreView_li_10_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}